/**
 *
 * @author Logan Edmondson
 */

package rockpaperscissors;

import java.util.Random;




public class RPS extends javax.swing.JFrame {

    /**
     * Creates new form RPS
     */
    public RPS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mainMenu = new javax.swing.JPanel();
        rpsTitle = new javax.swing.JLabel();
        playOneBtn = new javax.swing.JButton();
        playFiveBtn = new javax.swing.JButton();
        playInfinBtn = new javax.swing.JButton();
        gameUI = new javax.swing.JPanel();
        scoreBoard = new javax.swing.JPanel();
        yourScoreHeader = new javax.swing.JLabel();
        compScoreHeader = new javax.swing.JLabel();
        compScoreBox = new javax.swing.JLabel();
        yourScoreBox = new javax.swing.JLabel();
        faces = new javax.swing.JPanel();
        yourFace = new javax.swing.JLabel();
        compFace = new javax.swing.JLabel();
        gameStatus = new javax.swing.JPanel();
        winnerBox = new javax.swing.JLabel();
        statusBox = new javax.swing.JLabel();
        directionBox = new javax.swing.JLabel();
        mmBtn = new javax.swing.JButton();
        playAgain = new javax.swing.JButton();
        endGameBtn = new javax.swing.JButton();
        handSelection = new javax.swing.JPanel();
        scissorBtn = new javax.swing.JButton();
        paperBtn = new javax.swing.JButton();
        rockBtn = new javax.swing.JButton();
        yourHandHeader = new javax.swing.JLabel();
        compHandHeader = new javax.swing.JLabel();
        compHandBox = new javax.swing.JLabel();
        roundBox = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rock, Paper, Scissors");
        setBackground(new java.awt.Color(255, 250, 125));
        setForeground(new java.awt.Color(255, 255, 153));
        setPreferredSize(new java.awt.Dimension(1000, 800));

        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        mainMenu.setPreferredSize(new java.awt.Dimension(700, 700));

        rpsTitle.setFont(new java.awt.Font("Marker Felt", 1, 48)); // NOI18N
        rpsTitle.setText("Rock, Paper, Scissors");

        playOneBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        playOneBtn.setText("Play 1 Game");
        playOneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playOneBtnActionPerformed(evt);
            }
        });

        playFiveBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        playFiveBtn.setText("Play 5 Games");
        playFiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playFiveBtnActionPerformed(evt);
            }
        });

        playInfinBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        playInfinBtn.setText("Play âˆž Games");
        playInfinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playInfinBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuLayout = new javax.swing.GroupLayout(mainMenu);
        mainMenu.setLayout(mainMenuLayout);
        mainMenuLayout.setHorizontalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addContainerGap(314, Short.MAX_VALUE)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuLayout.createSequentialGroup()
                        .addComponent(rpsTitle)
                        .addGap(311, 311, 311))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuLayout.createSequentialGroup()
                        .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playFiveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playOneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playInfinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(395, 395, 395))))
        );
        mainMenuLayout.setVerticalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(rpsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(playOneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(playFiveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(playInfinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(345, Short.MAX_VALUE))
        );

        jPanel1.add(mainMenu);

        gameUI.setFocusable(false);
        gameUI.setOpaque(false);

        yourScoreHeader.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        yourScoreHeader.setText("You");
        yourScoreHeader.setFocusable(false);

        compScoreHeader.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        compScoreHeader.setText("Computer");

        compScoreBox.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        compScoreBox.setText("0");

        yourScoreBox.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        yourScoreBox.setText("0");

        javax.swing.GroupLayout scoreBoardLayout = new javax.swing.GroupLayout(scoreBoard);
        scoreBoard.setLayout(scoreBoardLayout);
        scoreBoardLayout.setHorizontalGroup(
            scoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreBoardLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(scoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scoreBoardLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(yourScoreBox))
                    .addComponent(yourScoreHeader))
                .addGroup(scoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scoreBoardLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(compScoreHeader))
                    .addGroup(scoreBoardLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(compScoreBox)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        scoreBoardLayout.setVerticalGroup(
            scoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yourScoreHeader)
                    .addComponent(compScoreHeader))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(scoreBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yourScoreBox)
                    .addComponent(compScoreBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        yourFace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors/normalFace.jpg"))); // NOI18N
        yourFace.setOpaque(true);

        compFace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors/normalFace.jpg"))); // NOI18N
        compFace.setOpaque(true);

        gameStatus.setOpaque(false);

        winnerBox.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        winnerBox.setForeground(new java.awt.Color(51, 204, 0));
        winnerBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        statusBox.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        statusBox.setForeground(new java.awt.Color(51, 51, 51));
        statusBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusBox.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        directionBox.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        directionBox.setForeground(new java.awt.Color(102, 102, 102));
        directionBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        mmBtn.setText("Main Menu");
        mmBtn.setContentAreaFilled(false);
        mmBtn.setDefaultCapable(false);
        mmBtn.setEnabled(false);
        mmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmBtnActionPerformed(evt);
            }
        });

        playAgain.setText("Play Again");
        playAgain.setContentAreaFilled(false);
        playAgain.setDefaultCapable(false);
        playAgain.setEnabled(false);
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });

        endGameBtn.setText("End Game");
        endGameBtn.setEnabled(false);
        endGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gameStatusLayout = new javax.swing.GroupLayout(gameStatus);
        gameStatus.setLayout(gameStatusLayout);
        gameStatusLayout.setHorizontalGroup(
            gameStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(winnerBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(statusBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(gameStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(directionBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(gameStatusLayout.createSequentialGroup()
                        .addComponent(mmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(gameStatusLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(endGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gameStatusLayout.setVerticalGroup(
            gameStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(winnerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gameStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout facesLayout = new javax.swing.GroupLayout(faces);
        faces.setLayout(facesLayout);
        facesLayout.setHorizontalGroup(
            facesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facesLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(yourFace)
                .addGap(18, 18, 18)
                .addComponent(gameStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(compFace)
                .addGap(137, 137, 137))
        );
        facesLayout.setVerticalGroup(
            facesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, facesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(facesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gameStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compFace)
                    .addComponent(yourFace))
                .addGap(16, 16, 16))
        );

        scissorBtn.setText("Scissors");
        scissorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorBtnActionPerformed(evt);
            }
        });

        paperBtn.setText("Paper");
        paperBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperBtnActionPerformed(evt);
            }
        });

        rockBtn.setText("Rock");
        rockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockBtnActionPerformed(evt);
            }
        });

        yourHandHeader.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        yourHandHeader.setText("Choose your Hand:");

        compHandHeader.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        compHandHeader.setText("Computer's Hand:");

        compHandBox.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        compHandBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        compHandBox.setText("???");

        javax.swing.GroupLayout handSelectionLayout = new javax.swing.GroupLayout(handSelection);
        handSelection.setLayout(handSelectionLayout);
        handSelectionLayout.setHorizontalGroup(
            handSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(handSelectionLayout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addGroup(handSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paperBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scissorBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rockBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(compHandBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186))
            .addGroup(handSelectionLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(yourHandHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(compHandHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );
        handSelectionLayout.setVerticalGroup(
            handSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, handSelectionLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(handSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yourHandHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compHandHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(rockBtn)
                .addGroup(handSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(handSelectionLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(paperBtn))
                    .addGroup(handSelectionLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(compHandBox)))
                .addGap(18, 18, 18)
                .addComponent(scissorBtn)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        roundBox.setFont(new java.awt.Font("Helvetica Neue", 1, 48)); // NOI18N
        roundBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roundBox.setText(" Round 1");

        javax.swing.GroupLayout gameUILayout = new javax.swing.GroupLayout(gameUI);
        gameUI.setLayout(gameUILayout);
        gameUILayout.setHorizontalGroup(
            gameUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameUILayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(faces, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(handSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(gameUILayout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addGroup(gameUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scoreBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roundBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        gameUILayout.setVerticalGroup(
            gameUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameUILayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(scoreBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(roundBox)
                .addGap(43, 43, 43)
                .addComponent(faces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(handSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(gameUI);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Main Menu (Game mode option) buttons and their defined actions when clicked
    ------------------------------------------------------------------------------------- */
    private void playOneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playOneBtnActionPerformed
        // TODO add your handling code here:
        mode = 0;
        newGame(mode);
        //game oneGame = new game();
        //oneGame.setMode(mode);
    }//GEN-LAST:event_playOneBtnActionPerformed

    private void playInfinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playInfinBtnActionPerformed
        // TODO add your handling code here:
        mode = 1;
        newGame(mode);
        //game oneGame = new game();
        //oneGame.setMode(mode);
    }//GEN-LAST:event_playInfinBtnActionPerformed

    private void playFiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playFiveBtnActionPerformed
        // TODO add your handling code here:
        mode = 2;
        newGame(mode);
        //game oneGame = new game();
        //oneGame.setMode(mode);
    }//GEN-LAST:event_playFiveBtnActionPerformed

    /* 
    Rock, Paper, Scissor (Hand Selection) buttons and their defined actions when clicked
    -------------------------------------------------------------------------------------- */
    private void rockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockBtnActionPerformed
        // TODO add your handling code here:
        buttonName = "Rock";
        choiceSelectActions(buttonName);
    }//GEN-LAST:event_rockBtnActionPerformed

    private void paperBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperBtnActionPerformed
        // TODO add your handling code here:
        buttonName = "Paper";
        choiceSelectActions(buttonName);
    }//GEN-LAST:event_paperBtnActionPerformed

    private void scissorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorBtnActionPerformed
        // TODO add your handling code here:
        buttonName = "Scissors";
        choiceSelectActions(buttonName);
    }//GEN-LAST:event_scissorBtnActionPerformed

    /*
    Game status buttons and their defined actions when clicked
    -------------------------------------------------------------------------------------- */
    private void mmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmBtnActionPerformed
        // TODO add your handling code here:
        toggleMainMenu(show);
        toggleGameUI(hide);
    }//GEN-LAST:event_mmBtnActionPerformed

    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed
        // TODO add your handling code here:
        toggleGameOverBtns(hide);
        newGame(mode);
    }//GEN-LAST:event_playAgainActionPerformed

    private void endGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameBtnActionPerformed
        // TODO add your handling code here:
        endGame();
    }//GEN-LAST:event_endGameBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new RPS().setVisible(true);
            }
        });
    }
    
    public void choiceSelectActions(String btnName){
        roundPlayed = true;
        roundMsg = "Round " + roundCount;
        yourChoice = btnName;
        computerChoice = compChooser();
        roundWinner = getWinner(yourChoice, computerChoice);
        updateScore(roundWinner);
        statusMessage = getStatus(roundWinner);
        directionMsg = nextStep(roundsRemaining, roundWinner);
        
        updateUI(computerChoice, roundWinner, roundMsg, statusMessage, directionMsg);
        if (roundsRemaining < 1){
            endGame();
        }
    }
    
    public String compChooser() {
        String choiceValue = "";
        Random rand = new Random();
        int randNum = rand.nextInt(3);
        switch (randNum) {
            case 0:
                choiceValue = "Rock";
                break;
            case 1:
                choiceValue = "Paper";
                break;
            case 2:
                choiceValue = "Scissors";
                break;
            default:
                choiceValue = "None";
        }
        return choiceValue;
    }
    
    public String getWinner(String player, String computer){
        String winner = "";
        
        if (player == computer){
            winner = "Tie";
        } else if (player == "Rock"){
            if (computer == "Paper") {
                winner = "Computer";
            } else if (computer == "Scissors") {
                winner = "You";
            }
        } else if (player == "Paper") {
            if (computer == "Rock") {
                winner = "You";
            } else if (computer == "Scissors") {
                winner = "Computer";
            }
        } else if (player == "Scissors") {
            if (computer == "Rock"){
                winner = "Computer";
            } else if (computer == "Paper") {
                winner = "You";
            }  
        }
        
        return winner;
    }
    
    public void updateScore(String rndWinner){
        if (rndWinner == "Computer"){
            computerScore += 1;
        } else if (rndWinner == "You") {
            playerScore += 1;
        }
    }
    
    public String getStatus(String rndWinner){
        String statusMsg;
        if (rndWinner == "Tie") {
            statusMsg = "replay ";
        } else if (rndWinner == "You") {
            statusMsg = "won ";
        } else {
            statusMsg = "wins ";
        }
        return statusMsg;
    }
    
    public String nextStep(int rounds, String winner){
        String message = "";
        if (rounds >= 1) {
            if (infinite == false) {
                roundsRemaining--;
            }
            
            if (winner == "Tie"){
                roundsRemaining++;
            } else {
                roundCount++;
            }

            message = "Choose again to continue";
        } else {
            message = "";
        }
        
        return message;
    }
    
    public void updateUI(String compHand, String winner, String round, String status, String direction){
        yourScoreBox.setText(String.valueOf(playerScore));
        compScoreBox.setText(String.valueOf(computerScore));
        compHandBox.setText(compHand);
        winnerBox.setText(winner);
        roundBox.setText(round);
        if (roundPlayed == true){
            statusBox.setText(status + round);
        } else {
            statusBox.setText(status);
        }
        directionBox.setText(direction);
    }
    
    
    
    public void endGame(){
        String winMsg;
        if (playerScore > computerScore) {
            winMsg = "You Won!";
        } else {
            winMsg = "You Lost";
        }
        roundMsg = "Game Over";
        statusMessage = "";
        
        
        updateUI("", winMsg, roundMsg, "", "");
        
        toggleHandSelection(hide);
        toggleChoiceBtns(disable);
        toggleGameOverBtns(show);
        toggleEndBtn(hide);
        toggleStatusBox(hide);
        toggleDirecBox(hide);
        toggleWinnerBox(show);
    }
    
    
    public void toggleGameUI(boolean state){
        gameUI.setOpaque(state);
        gameUI.setVisible(state);
    }
    
    
    public void toggleMainMenu(boolean state){
        mainMenu.setVisible(state);
        mainMenu.setOpaque(state);
    }
    
    
    public void toggleHandSelection(boolean state) {
        handSelection.setVisible(state);
        handSelection.setEnabled(state);
        handSelection.setOpaque(state);
    }
 
    
    public void toggleChoiceBtns(boolean state){
        rockBtn.setEnabled(state);
        paperBtn.setEnabled(state);
        scissorBtn.setEnabled(state);
    }
    
    
    public void toggleGameOverBtns(boolean state){
        playAgain.setVisible(state);
        playAgain.setEnabled(state);
        playAgain.setOpaque(state);
        mmBtn.setVisible(state);
        mmBtn.setEnabled(state);
        mmBtn.setOpaque(state);
    }
    
    
    public void toggleEndBtn(boolean state){
        endGameBtn.setVisible(state);
        endGameBtn.setEnabled(state);
        endGameBtn.setOpaque(state);
    }
    
    
    public void toggleStatusBox(boolean state){
        winnerBox.setVisible(state);
        winnerBox.setOpaque(state);
        statusBox.setVisible(state);
        statusBox.setOpaque(state);
    }

    
    public void toggleDirecBox(boolean state){
        directionBox.setVisible(state);
        directionBox.setOpaque(state);
    }
    
    public void toggleWinnerBox(boolean state){
        winnerBox.setVisible(state);
        winnerBox.setOpaque(state);
    }
    
    public void newGame(int modeSelected){
        roundPlayed = false;
        yourChoice = "";
        computerChoice = "???";
        playerScore = 0;
        computerScore = 0;
        roundCount = 1;
        roundMsg = "Round " + roundCount;
        statusMessage = "";
        directionMsg = "Choose Rock, Paper, or Scissors";
        roundWinner = "";

        toggleMainMenu(hide);
        toggleGameUI(show);
        toggleChoiceBtns(enable);
        toggleGameOverBtns(hide);
        toggleHandSelection(show);
        toggleStatusBox(show);
        toggleDirecBox(show);

        switch(modeSelected){
            case 0:
                roundsRemaining = 1;
                toggleEndBtn(hide);
                break;
            case 1:
                roundsRemaining = 1;
                infinite = true;
                toggleEndBtn(show);
                break;
            case 2:
                roundsRemaining = 5;
                toggleEndBtn(hide);
                break;
            default:
                roundsRemaining = 1;
                toggleEndBtn(hide);
        }
        updateUI(computerChoice, roundWinner, roundMsg, statusMessage, directionMsg);
    }
    
    String yourChoice;
    String computerChoice;
    String statusMessage;
    String directionMsg;
    String roundMsg;
    String buttonName;
    int mode;
    int roundsRemaining;
    boolean infinite = false;
    boolean hide = false;
    boolean show = true;
    boolean disable = false;
    boolean enable = true;
    boolean roundPlayed;
    int playerScore = 0;
    int computerScore = 0;
    int roundCount = 1;
    String roundWinner;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel compFace;
    private javax.swing.JLabel compHandBox;
    private javax.swing.JLabel compHandHeader;
    private javax.swing.JLabel compScoreBox;
    private javax.swing.JLabel compScoreHeader;
    private javax.swing.JLabel directionBox;
    private javax.swing.JButton endGameBtn;
    private javax.swing.JPanel faces;
    private javax.swing.JPanel gameStatus;
    private javax.swing.JPanel gameUI;
    private javax.swing.JPanel handSelection;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel mainMenu;
    private javax.swing.JButton mmBtn;
    private javax.swing.JButton paperBtn;
    private javax.swing.JButton playAgain;
    private javax.swing.JButton playFiveBtn;
    private javax.swing.JButton playInfinBtn;
    private javax.swing.JButton playOneBtn;
    private javax.swing.JButton rockBtn;
    private javax.swing.JLabel roundBox;
    private javax.swing.JLabel rpsTitle;
    private javax.swing.JButton scissorBtn;
    private javax.swing.JPanel scoreBoard;
    private javax.swing.JLabel statusBox;
    private javax.swing.JLabel winnerBox;
    private javax.swing.JLabel yourFace;
    private javax.swing.JLabel yourHandHeader;
    private javax.swing.JLabel yourScoreBox;
    private javax.swing.JLabel yourScoreHeader;
    // End of variables declaration//GEN-END:variables
}

