/**
 *
 * @author Logan Edmondson
 */

package rockpaperscissors;

import java.util.Random;




public class RPS extends javax.swing.JFrame {
    Game rpsGame = new Game();
    /**
     * Creates new form RPS
     */
    public RPS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mainMenu = new javax.swing.JPanel();
        playOneBtn = new javax.swing.JButton();
        playFiveBtn = new javax.swing.JButton();
        playInfinBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        gameUI = new javax.swing.JPanel();
        playerScoreHeader = new javax.swing.JLabel();
        computerScoreBox = new javax.swing.JLabel();
        playerScoreBox = new javax.swing.JLabel();
        gameStatus = new javax.swing.JPanel();
        roundBox = new javax.swing.JLabel();
        computerFace = new javax.swing.JLabel();
        playerFace = new javax.swing.JLabel();
        winnerBox = new javax.swing.JLabel();
        statusBox = new javax.swing.JLabel();
        playAgain = new javax.swing.JButton();
        endGameBtn = new javax.swing.JButton();
        mmBtn = new javax.swing.JButton();
        handSelection = new javax.swing.JPanel();
        scissorBtn = new javax.swing.JButton();
        paperBtn = new javax.swing.JButton();
        rockBtn = new javax.swing.JButton();
        compHandBox = new javax.swing.JLabel();
        directionBox = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rock, Paper, Scissors");
        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(new java.awt.Color(255, 255, 153));
        setMaximumSize(new java.awt.Dimension(1000, 800));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setPreferredSize(new java.awt.Dimension(1000, 800));
        setResizable(false);

        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        mainMenu.setPreferredSize(new java.awt.Dimension(700, 700));
        mainMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playOneBtn.setBackground(new java.awt.Color(0, 255, 255));
        playOneBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        playOneBtn.setForeground(new java.awt.Color(51, 51, 51));
        playOneBtn.setText("Play 1 Game");
        playOneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playOneBtnActionPerformed(evt);
            }
        });
        mainMenu.add(playOneBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, 200, 45));

        playFiveBtn.setBackground(new java.awt.Color(255, 250, 138));
        playFiveBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        playFiveBtn.setForeground(new java.awt.Color(51, 51, 51));
        playFiveBtn.setText("Play 5 Games");
        playFiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playFiveBtnActionPerformed(evt);
            }
        });
        mainMenu.add(playFiveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 415, 200, 45));

        playInfinBtn.setBackground(new java.awt.Color(255, 109, 97));
        playInfinBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        playInfinBtn.setForeground(new java.awt.Color(51, 51, 51));
        playInfinBtn.setText("Play âˆž Games");
        playInfinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playInfinBtnActionPerformed(evt);
            }
        });
        mainMenu.add(playInfinBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 520, 200, 45));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors/MainMenu.png"))); // NOI18N
        mainMenu.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 800));

        jPanel1.add(mainMenu);

        gameUI.setFocusable(false);
        gameUI.setMaximumSize(new java.awt.Dimension(1000, 800));
        gameUI.setMinimumSize(new java.awt.Dimension(1000, 800));
        gameUI.setOpaque(false);
        gameUI.setPreferredSize(new java.awt.Dimension(1000, 800));
        gameUI.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playerScoreHeader.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        playerScoreHeader.setForeground(new java.awt.Color(0, 255, 255));
        playerScoreHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerScoreHeader.setText("You");
        playerScoreHeader.setFocusable(false);
        gameUI.add(playerScoreHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 44, 90, -1));

        computerScoreBox.setFont(new java.awt.Font("Arial", 1, 55)); // NOI18N
        computerScoreBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        computerScoreBox.setText("0");
        gameUI.add(computerScoreBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 100, -1));

        playerScoreBox.setFont(new java.awt.Font("Arial", 1, 55)); // NOI18N
        playerScoreBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerScoreBox.setText("0");
        gameUI.add(playerScoreBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 100, -1));

        gameStatus.setMaximumSize(new java.awt.Dimension(1000, 450));
        gameStatus.setMinimumSize(new java.awt.Dimension(1000, 450));
        gameStatus.setOpaque(false);
        gameStatus.setPreferredSize(new java.awt.Dimension(1000, 450));
        gameStatus.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roundBox.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        roundBox.setForeground(new java.awt.Color(255, 255, 255));
        roundBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roundBox.setText(" Round 1");
        roundBox.setPreferredSize(new java.awt.Dimension(1000, 59));
        gameStatus.add(roundBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));
        roundBox.getAccessibleContext().setAccessibleParent(gameUI);

        computerFace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        computerFace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors/RPS_Comp_Start.png"))); // NOI18N
        computerFace.setMaximumSize(new java.awt.Dimension(350, 350));
        computerFace.setMinimumSize(new java.awt.Dimension(350, 350));
        computerFace.setPreferredSize(new java.awt.Dimension(350, 350));
        gameStatus.add(computerFace, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 95, -1, -1));

        playerFace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerFace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors/RPS_Player_Start.png"))); // NOI18N
        playerFace.setPreferredSize(new java.awt.Dimension(300, 350));
        gameStatus.add(playerFace, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        winnerBox.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        winnerBox.setForeground(new java.awt.Color(51, 204, 0));
        winnerBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winnerBox.setText("Winner Box");
        gameStatus.add(winnerBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 200, 70));
        winnerBox.getAccessibleContext().setAccessibleParent(gameUI);

        statusBox.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        statusBox.setForeground(new java.awt.Color(255, 255, 255));
        statusBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusBox.setText("Status Box");
        statusBox.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gameStatus.add(statusBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 200, -1));
        statusBox.getAccessibleContext().setAccessibleParent(gameUI);

        playAgain.setBackground(new java.awt.Color(51, 51, 51));
        playAgain.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        playAgain.setForeground(new java.awt.Color(51, 255, 0));
        playAgain.setText("Play Again");
        playAgain.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        playAgain.setDefaultCapable(false);
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });
        gameStatus.add(playAgain, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 361, 160, 40));

        endGameBtn.setBackground(new java.awt.Color(51, 51, 51));
        endGameBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        endGameBtn.setForeground(new java.awt.Color(51, 255, 0));
        endGameBtn.setText("End Game");
        endGameBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        endGameBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endGameBtn.setOpaque(true);
        endGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameBtnActionPerformed(evt);
            }
        });
        gameStatus.add(endGameBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 313, 160, 40));

        mmBtn.setBackground(new java.awt.Color(51, 51, 51));
        mmBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        mmBtn.setForeground(new java.awt.Color(51, 255, 0));
        mmBtn.setText("Main Menu");
        mmBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        mmBtn.setDefaultCapable(false);
        mmBtn.setOpaque(true);
        mmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmBtnActionPerformed(evt);
            }
        });
        gameStatus.add(mmBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 410, 160, 40));

        gameUI.add(gameStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 115, -1, -1));

        handSelection.setMaximumSize(new java.awt.Dimension(1000, 220));
        handSelection.setMinimumSize(new java.awt.Dimension(1000, 220));
        handSelection.setOpaque(false);
        handSelection.setPreferredSize(new java.awt.Dimension(1000, 220));
        handSelection.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scissorBtn.setBackground(new java.awt.Color(51, 51, 51));
        scissorBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        scissorBtn.setForeground(new java.awt.Color(0, 255, 255));
        scissorBtn.setText("Scissors");
        scissorBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255)));
        scissorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorBtnActionPerformed(evt);
            }
        });
        handSelection.add(scissorBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 126, 30));

        paperBtn.setBackground(new java.awt.Color(51, 51, 51));
        paperBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        paperBtn.setForeground(new java.awt.Color(0, 255, 255));
        paperBtn.setText("Paper");
        paperBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255)));
        paperBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperBtnActionPerformed(evt);
            }
        });
        handSelection.add(paperBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 126, 30));

        rockBtn.setBackground(new java.awt.Color(51, 51, 51));
        rockBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        rockBtn.setForeground(new java.awt.Color(0, 255, 255));
        rockBtn.setText("Rock");
        rockBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255), new java.awt.Color(0, 255, 255)));
        rockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockBtnActionPerformed(evt);
            }
        });
        handSelection.add(rockBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 126, 30));

        compHandBox.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        compHandBox.setForeground(new java.awt.Color(255, 109, 97));
        compHandBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        compHandBox.setText("???");
        handSelection.add(compHandBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 90, 120, 40));

        directionBox.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        directionBox.setForeground(new java.awt.Color(255, 250, 138));
        directionBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        directionBox.setText("Direction Box");
        handSelection.add(directionBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 320, -1));
        directionBox.getAccessibleContext().setAccessibleParent(gameUI);

        gameUI.add(handSelection, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 1000, 220));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors/GameUI.png"))); // NOI18N
        gameUI.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 800));

        jPanel1.add(gameUI);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Main Menu (Game mode option) buttons and their defined actions when clicked
    ------------------------------------------------------------------------------------- */
    private void playOneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playOneBtnActionPerformed
        // TODO add your handling code here:
        rpsGame.setGameRounds(1);
        updateUI();
    }//GEN-LAST:event_playOneBtnActionPerformed

    private void playInfinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playInfinBtnActionPerformed
        // TODO add your handling code here:
        rpsGame.setInfinite();
        updateUI();
    }//GEN-LAST:event_playInfinBtnActionPerformed

    private void playFiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playFiveBtnActionPerformed
        // TODO add your handling code here:
        rpsGame.setGameRounds(5);
        updateUI();
    }//GEN-LAST:event_playFiveBtnActionPerformed

    /* 
    Rock, Paper, Scissor (Hand Selection) buttons and their defined actions when clicked
    -------------------------------------------------------------------------------------- */
    private void rockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockBtnActionPerformed
        // TODO add your handling code here:
        hand = "Rock";
        rpsGame.setHand(hand);
        rpsGame.playRound();
        updateUI();
    }//GEN-LAST:event_rockBtnActionPerformed

    private void paperBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperBtnActionPerformed
        // TODO add your handling code here:
        hand = "Paper";
        rpsGame.setHand(hand);
        rpsGame.playRound();
        updateUI();
    }//GEN-LAST:event_paperBtnActionPerformed

    private void scissorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorBtnActionPerformed
        // TODO add your handling code here:
        hand = "Scissors";
        rpsGame.setHand(hand);
        rpsGame.playRound();
        updateUI();
    }//GEN-LAST:event_scissorBtnActionPerformed

    /*
    Game status buttons and their defined actions when clicked
    -------------------------------------------------------------------------------------- */
    private void mmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmBtnActionPerformed
        // TODO add your handling code here:
        toggleMainMenu(show);
        toggleGameActive(hide);
        toggleGameOver(hide);
    }//GEN-LAST:event_mmBtnActionPerformed

    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed
        // TODO add your handling code here:
        rpsGame.playAgain();
        updateUI();
    }//GEN-LAST:event_playAgainActionPerformed

    private void endGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameBtnActionPerformed
        // TODO add your handling code here:
        rpsGame.endGame();
        updateUI();
    }//GEN-LAST:event_endGameBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new RPS().setVisible(true);
            }
        });
    }

    public void updateUI(){
        roundBox.setText(rpsGame.getRound());
        playerScoreBox.setText(String.valueOf(rpsGame.getPlayerScore()));
        computerScoreBox.setText(String.valueOf(rpsGame.getComputerScore()));
        compHandBox.setText(rpsGame.getComputerHand());
        winnerBox.setText(rpsGame.getWinner());
        statusBox.setText(rpsGame.getStatusMsg());
        directionBox.setText(rpsGame.getDirectionMsg());
        
        gameOver = rpsGame.getGameOver();
        if (gameOver == true){
            toggleGameOver(show);
        } else {
            toggleMainMenu(hide);
            toggleGameOver(hide);
            toggleGameActive(show);
        }
    }
    
    public void toggleGameActive(boolean state){
        gameUI.setVisible(state);
        gameStatus.setVisible(state);
    }
    
    
    public void toggleMainMenu(boolean state){
        // Changes to the specified state
        mainMenu.setVisible(state);
        mainMenu.setOpaque(state);
        playOneBtn.setEnabled(state);
        playFiveBtn.setEnabled(state);
        playInfinBtn.setEnabled(state);
    }
    
    public void toggleGameOver(boolean state) {
        playAgain.setVisible(state);
        playAgain.setEnabled(state);
        playAgain.setOpaque(state);
        mmBtn.setVisible(state);
        mmBtn.setEnabled(state);
        mmBtn.setOpaque(state);
        
        endGameBtn.setVisible(!state);
        endGameBtn.setEnabled(!state);
        endGameBtn.setOpaque(!state);
        handSelection.setVisible(!state);
        handSelection.setEnabled(!state);
    }
    
    boolean gameOver;
    boolean hide = false;
    boolean show = true;
    boolean disable = false;
    boolean enable = true;
    String hand;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel compHandBox;
    private javax.swing.JLabel computerFace;
    private javax.swing.JLabel computerScoreBox;
    private javax.swing.JLabel directionBox;
    private javax.swing.JButton endGameBtn;
    private javax.swing.JPanel gameStatus;
    private javax.swing.JPanel gameUI;
    private javax.swing.JPanel handSelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel mainMenu;
    private javax.swing.JButton mmBtn;
    private javax.swing.JButton paperBtn;
    private javax.swing.JButton playAgain;
    private javax.swing.JButton playFiveBtn;
    private javax.swing.JButton playInfinBtn;
    private javax.swing.JButton playOneBtn;
    private javax.swing.JLabel playerFace;
    private javax.swing.JLabel playerScoreBox;
    private javax.swing.JLabel playerScoreHeader;
    private javax.swing.JButton rockBtn;
    private javax.swing.JLabel roundBox;
    private javax.swing.JButton scissorBtn;
    private javax.swing.JLabel statusBox;
    private javax.swing.JLabel winnerBox;
    // End of variables declaration//GEN-END:variables
}

